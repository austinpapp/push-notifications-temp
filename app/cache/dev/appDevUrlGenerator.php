<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),),
        '_profiler_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:importAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/import',    ),  ),  4 =>   array (  ),),
        '_profiler_export' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:exportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.txt',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler/export',    ),  ),  4 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),),
        'api_activity_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\ActivityController::indexAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/activity/',    ),  ),  4 =>   array (  ),),
        'civix_api_activity_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\ActivityController::listAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/activities/',    ),  ),  4 =>   array (  ),),
        'civix_api_activity_saveread' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\ActivityController::saveReadAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/activities/read/',    ),  ),  4 =>   array (  ),),
        'api_announcements' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\AnnouncementController::listAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/announcements',    ),  ),  4 =>   array (  ),),
        'api_petition_answer_unsign' => array (  0 =>   array (    0 => 'id',    1 => 'answerId',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\AnswersController::unsignPetitionAnswerAction',    '_format' => 'json',  ),  2 =>   array (    'entityId' => '\\d+',    'answerId' => '\\d+',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'answerId',    ),    1 =>     array (      0 => 'text',      1 => '/answers',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/petition',    ),  ),  4 =>   array (  ),),
        'api_micro_petition_answer_unsign' => array (  0 =>   array (    0 => 'id',    1 => 'answerId',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\AnswersController::unsignMicroPetitionsAnswerAction',    '_format' => 'json',  ),  2 =>   array (    'entityId' => '\\d+',    'answerId' => '\\d+',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'answerId',    ),    1 =>     array (      0 => 'text',      1 => '/answers',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/micro-petitions',    ),  ),  4 =>   array (  ),),
        'civix_api_answers_paymenthistory' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\AnswersController::paymentHistory',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/answers/payment-history',    ),  ),  4 =>   array (  ),),
        'civix_api_answers_charges' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\AnswersController::charges',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/charges/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/answers',    ),  ),  4 =>   array (  ),),
        'civix_api_cards_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\CardsController::add',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/cards/',    ),  ),  4 =>   array (  ),),
        'civix_api_cards_listcards' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\CardsController::listCards',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/cards/',    ),  ),  4 =>   array (  ),),
        'civix_api_cards_removecard' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\CardsController::removeCard',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/cards',    ),  ),  4 =>   array (  ),),
        'api_comments' => array (  0 =>   array (    0 => 'typeEntity',    1 => 'entityId',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\CommentController::getCommentsAction',    '_format' => 'json',  ),  2 =>   array (    'entityId' => '\\d+',    'typeEntity' => 'poll|micro-petitions',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comments/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'entityId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => 'poll|micro-petitions',      3 => 'typeEntity',    ),    3 =>     array (      0 => 'text',      1 => '/api',    ),  ),  4 =>   array (  ),),
        'api_comments_add' => array (  0 =>   array (    0 => 'typeEntity',    1 => 'entityId',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\CommentController::addCommentAction',    '_format' => 'json',  ),  2 =>   array (    'entityId' => '\\d+',    'typeEntity' => 'poll|micro-petitions',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comments/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'entityId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => 'poll|micro-petitions',      3 => 'typeEntity',    ),    3 =>     array (      0 => 'text',      1 => '/api',    ),  ),  4 =>   array (  ),),
        'api_question_comments' => array (  0 =>   array (    0 => 'questionId',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\CommentController::commentsByQuestionAction',    '_format' => 'json',  ),  2 =>   array (    'questionId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'questionId',    ),    1 =>     array (      0 => 'text',      1 => '/api/poll/comments',    ),  ),  4 =>   array (  ),),
        'api_question_add_comment' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\CommentController::addCommentToQuestion',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/poll/comments/add',    ),  ),  4 =>   array (  ),),
        'api_endpoints_get' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\EndpointController::getAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/endpoints/',    ),  ),  4 =>   array (  ),),
        'api_endpoints_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\EndpointController::createAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/endpoints/',    ),  ),  4 =>   array (  ),),
        'civix_api_follow_get' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\FollowController::getAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/follow/',    ),  ),  4 =>   array (  ),),
        'civix_api_follow_post' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\FollowController::postAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/follow/',    ),  ),  4 =>   array (  ),),
        'civix_api_follow_put' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\FollowController::putAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/follow',    ),  ),  4 =>   array (  ),),
        'civix_api_follow_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\FollowController::deleteAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/follow',    ),  ),  4 =>   array (  ),),
        'api_groups' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\GroupController::getGroupsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/groups/',    ),  ),  4 =>   array (  ),),
        'civix_api_group_creategroup' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\GroupController::createGroupAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/groups/',    ),  ),  4 =>   array (  ),),
        'civix_api_group_getusergroups' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\GroupController::getUserGroupsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/groups/user-groups/',    ),  ),  4 =>   array (  ),),
        'api_popular_groups' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\GroupController::getPopularGroupsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/groups/popular',    ),  ),  4 =>   array (  ),),
        'api_new_groups' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\GroupController::getNewGroupsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/groups/new',    ),  ),  4 =>   array (  ),),
        'api_groups_join' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\GroupController::joinToGroupAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/groups/join',    ),  ),  4 =>   array (  ),),
        'api_groups_unjoin' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\GroupController::unjoinFromGroup',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/groups/join',    ),  ),  4 =>   array (  ),),
        'api_group_information' => array (  0 =>   array (    0 => 'group',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\GroupController::getInformationAction',    '_format' => 'json',  ),  2 =>   array (    'group' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'group',    ),    1 =>     array (      0 => 'text',      1 => '/api/groups/info',    ),  ),  4 =>   array (  ),),
        'api_group_invites' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\GroupController::getInvitesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/groups/invites',    ),  ),  4 =>   array (  ),),
        'api_group_invites_approval' => array (  0 =>   array (    0 => 'status',    1 => 'group',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\GroupController::invitesApprovalAction',    '_format' => 'json',  ),  2 =>   array (    'group' => '\\d+',    'status' => 'approve|reject',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'group',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'approve|reject',      3 => 'status',    ),    2 =>     array (      0 => 'text',      1 => '/api/groups/invites',    ),  ),  4 =>   array (  ),),
        'api_group_fields' => array (  0 =>   array (    0 => 'group',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\GroupController::getGroupRequiredFields',    '_format' => 'json',  ),  2 =>   array (    'group' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fields',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'group',    ),    2 =>     array (      0 => 'text',      1 => '/api/groups',    ),  ),  4 =>   array (  ),),
        'civix_api_invite_get' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\InviteController::getAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/invites/',    ),  ),  4 =>   array (  ),),
        'civix_api_invite_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\InviteController::createAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/invites/',    ),  ),  4 =>   array (  ),),
        'civix_api_invite_remove' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\InviteController::removeAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/invites',    ),  ),  4 =>   array (  ),),
        'api_micropetition_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\MicropetitionController::createPetitionAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/micro-petitions',    ),  ),  4 =>   array (  ),),
        'api_micropetition_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\MicropetitionController::getListMicropetitions',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/micro-petitions',    ),  ),  4 =>   array (  ),),
        'api_get_micropetitions' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\MicropetitionController::getMicropetitions',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/micro-petitions/',    ),  ),  4 =>   array (  ),),
        'api_micropetition_info' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\MicropetitionController::getMicropetition',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/micro-petitions',    ),  ),  4 =>   array (  ),),
        'api_micropetition_choice' => array (  0 =>   array (    0 => 'id',    1 => 'option_id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\MicropetitionController::choiceMicropetition',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'option_id' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'option_id',    ),    1 =>     array (      0 => 'text',      1 => '/answers',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/api/micro-petitions',    ),  ),  4 =>   array (  ),),
        'civix_api_micropetition_answers' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\MicropetitionController::answersAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/micro-petitions/answers/',    ),  ),  4 =>   array (  ),),
        'civix_api_permission_permissions' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\PermissionController::permissionsAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/permissions',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/groups',    ),  ),  4 =>   array (  ),),
        'api_question_get' => array (  0 =>   array (    0 => 'question_id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\PollController::questionGetAction',    '_format' => 'json',  ),  2 =>   array (    'question_id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'question_id',    ),    1 =>     array (      0 => 'text',      1 => '/api/poll/question',    ),  ),  4 =>   array (  ),),
        'api_question_get_by_representative' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\PollController::questionGetByRepresentativeAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/poll/question/representative',    ),  ),  4 =>   array (  ),),
        'api_question_get_by_group' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\PollController::questionGetByGroupAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/poll/question/group',    ),  ),  4 =>   array (  ),),
        'api_question_answers_influence' => array (  0 =>   array (    0 => 'question',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\PollController::answersByInfluenceAction',    '_format' => 'json',  ),  2 =>   array (    'question' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/answers/influence',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'question',    ),    2 =>     array (      0 => 'text',      1 => '/api/poll/question',    ),  ),  4 =>   array (  ),),
        'api_question_answers_influence_outside' => array (  0 =>   array (    0 => 'question',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\PollController::answersByOutsideInfluenceAction',    '_format' => 'json',  ),  2 =>   array (    'question' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/answers/influence/outside',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'question',    ),    2 =>     array (      0 => 'text',      1 => '/api/poll/question',    ),  ),  4 =>   array (  ),),
        'api_answer_add' => array (  0 =>   array (    0 => 'question_id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\PollController::answerAddAction',    '_format' => 'json',  ),  2 =>   array (    'question_id' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/answer/add',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'question_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/poll/question',    ),  ),  4 =>   array (  ),),
        'api_question_rate_comment' => array (  0 =>   array (    0 => 'id',    1 => 'action',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\PollController::rateCommentAction',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    'action' => 'up|down|delete',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => 'up|down|delete',      3 => 'action',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/poll/comments/rate',    ),  ),  4 =>   array (  ),),
        'civix_api_poll_answers' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\PollController::answersAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/poll/answers/',    ),  ),  4 =>   array (  ),),
        'api_profile_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\ProfileController::indexAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/profile',    ),  ),  4 =>   array (  ),),
        'api_profile_information' => array (  0 =>   array (    0 => 'user',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\ProfileController::getInformationAction',    '_format' => 'json',  ),  2 =>   array (    'user' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'user',    ),    1 =>     array (      0 => 'text',      1 => '/api/profile/info',    ),  ),  4 =>   array (  ),),
        'api_profile_follow_unfollow' => array (  0 =>   array (    0 => 'status',    1 => 'targetUser',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\ProfileController::followAction',    '_format' => 'json',  ),  2 =>   array (    'targetUser' => '\\d+',    'status' => 'follow|unfollow|active|reject',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'targetUser',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'follow|unfollow|active|reject',      3 => 'status',    ),    2 =>     array (      0 => 'text',      1 => '/api/profile/follow',    ),  ),  4 =>   array (  ),),
        'civix_api_profile_getwaitingfollowers' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\ProfileController::getWaitingFollowersAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/profile/waiting-followers',    ),  ),  4 =>   array (  ),),
        'civix_api_profile_getmyfollowers' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\ProfileController::getMyFollowers',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/profile/followers',    ),  ),  4 =>   array (  ),),
        'civix_api_profile_getmyfollowing' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\ProfileController::getMyFollowing',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/profile/following',    ),  ),  4 =>   array (  ),),
        'civix_api_profile_getfollowingbyuser' => array (  0 =>   array (    0 => 'targetUser',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\ProfileController::getFollowingByUser',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'targetUser',    ),    1 =>     array (      0 => 'text',      1 => '/api/profile/following',    ),  ),  4 =>   array (  ),),
        'civix_api_profile_getlastapprovedfollowing' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\ProfileController::getLastApprovedFollowing',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/profile/last-following',    ),  ),  4 =>   array (  ),),
        'api_profile_update' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\ProfileController::updateAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/profile/update',    ),  ),  4 =>   array (  ),),
        'api_profile_settings' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\ProfileController::updateSettings',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/profile/settings',    ),  ),  4 =>   array (  ),),
        'api_profile_facebook_friends' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\ProfileController::getMyFacebookFriends',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/profile/facebook-friends',    ),  ),  4 =>   array (  ),),
        'api_profile_link_to_facebook' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\ProfileController::linkToFacebook',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/profile/link-to-facebook',    ),  ),  4 =>   array (  ),),
        'api_my_representatives' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\RepresentativeController::getMyRepresentativesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/representatives/',    ),  ),  4 =>   array (  ),),
        'api_representative_information' => array (  0 =>   array (    0 => 'representative_id',    1 => 'storage_id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\RepresentativeController::getInformationAction',    '_format' => 'json',  ),  2 =>   array (    'representative_id' => '\\d+',    'storage_id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'storage_id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'representative_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/representatives/info',    ),  ),  4 =>   array (  ),),
        'api_representative_committee' => array (  0 =>   array (    0 => 'storage_id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\RepresentativeController::getCommitteeInfo',    '_format' => 'json',  ),  2 =>   array (    'storage_id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'storage_id',    ),    1 =>     array (      0 => 'text',      1 => '/api/representatives/info/committee',    ),  ),  4 =>   array (  ),),
        'api_representative_sponsored_bills' => array (  0 =>   array (    0 => 'storage_id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\RepresentativeController::getSponsoredBills',    '_format' => 'json',  ),  2 =>   array (    'storage_id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'storage_id',    ),    1 =>     array (      0 => 'text',      1 => '/api/representatives/info/sponsored-bills',    ),  ),  4 =>   array (  ),),
        'api_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\SearchController::getGroupsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/search',    ),  ),  4 =>   array (  ),),
        'api_search_hash_tag' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\SearchController::findByHashTag',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/search/by-hash-tags',    ),  ),  4 =>   array (  ),),
        'api_secure_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\SecureController::indexAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/secure/login',    ),  ),  4 =>   array (  ),),
        'api_secure_facebook_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\SecureController::facebookLogin',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/secure/facebook/login',    ),  ),  4 =>   array (  ),),
        'api_secure_registration' => array (  0 =>   array (  ),  1 =>   array (    'validatorGroups' => NULL,    '_controller' => 'Civix\\ApiBundle\\Controller\\SecureController::registrationAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/secure/registration',    ),  ),  4 =>   array (  ),),
        'api_secure_facebook_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\SecureController::facebookRegistration',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/secure/registration-facebook',    ),  ),  4 =>   array (  ),),
        'api_secure_forgot_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\SecureController::forgotPassword',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/secure/forgot-password',    ),  ),  4 =>   array (  ),),
        'api_secure_check_token' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\SecureController::checkResetToken',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/api/secure/resettoken',    ),  ),  4 =>   array (  ),),
        'api_secure_password_update' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\SecureController::saveNewPassword',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/api/secure/resettoken',    ),  ),  4 =>   array (  ),),
        'api_beta_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\SecureController::betaRequest',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/secure/beta',    ),  ),  4 =>   array (  ),),
        'civix_api_socialactivity_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\SocialActivityController::listAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/social-activities/',    ),  ),  4 =>   array (  ),),
        'civix_api_socialactivity_remove' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\SocialActivityController::removeAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/social-activities',    ),  ),  4 =>   array (  ),),
        'civix_api_socialactivity_put' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\SocialActivityController::putAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/social-activities',    ),  ),  4 =>   array (  ),),
        'api_user_by_username' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\UserController::findByUsernameAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/users/find',    ),  ),  4 =>   array (  ),),
        'api_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\UserController::usersAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/users/',    ),  ),  4 =>   array (  ),),
        'api_public_payment_request_info' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\PublicApi\\PaymentRequestController::getPaymentRequestById',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api-public/payment-request',    ),  ),  4 =>   array (  ),),
        'api_public_petition_info' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\PublicApi\\PetitionController::getPetitionById',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api-public/petition',    ),  ),  4 =>   array (  ),),
        'api_public_petition_comments' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\PublicApi\\PetitionController::getPetitionComments',    '_format' => 'json',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comments',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api-public/petition',    ),  ),  4 =>   array (  ),),
        'civix_api_publicapi_post_getposts' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\PublicApi\\PostController::getPosts',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api-public/posts/',    ),  ),  4 =>   array (  ),),
        'civix_api_publicapi_user_getusers' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\PublicApi\\UserController::getUsers',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api-public/users/',    ),  ),  4 =>   array (  ),),
        'civix_api_leader_bankaccounts_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\Leader\\BankAccountsController::add',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api-leader/bank-accounts/',    ),  ),  4 =>   array (  ),),
        'civix_api_leader_bankaccounts_listbankaccounts' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\Leader\\BankAccountsController::listBankAccounts',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api-leader/bank-accounts/',    ),  ),  4 =>   array (  ),),
        'civix_api_leader_cards_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\Leader\\CardsController::add',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api-leader/cards/',    ),  ),  4 =>   array (  ),),
        'civix_api_leader_cards_listcards' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\Leader\\CardsController::listCards',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api-leader/cards/',    ),  ),  4 =>   array (  ),),
        'civix_api_leader_cards_removecard' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\Leader\\CardsController::removeCard',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api-leader/cards',    ),  ),  4 =>   array (  ),),
        'civix_api_leader_micropetition_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\Leader\\MicroPetitionController::listAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api-leader/micro-petitions/',    ),  ),  4 =>   array (  ),),
        'civix_api_leader_micropetition_answerslist' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\Leader\\MicroPetitionController::answersListAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/answers/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api-leader/micro-petitions',    ),  ),  4 =>   array (  ),),
        'civix_api_leader_poll_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\Leader\\PollController::listAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api-leader/polls/',    ),  ),  4 =>   array (  ),),
        'civix_api_leader_poll_answerslist' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\Leader\\PollController::answersListAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/answers/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api-leader/polls',    ),  ),  4 =>   array (  ),),
        'civix_api_leader_secure_createsession' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\ApiBundle\\Controller\\Leader\\SecureController::createSessionAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api-leader/sessions/',    ),  ),  4 =>   array (  ),),
        'civix_front_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),),
        'civix_front_help' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/help',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_login_check' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/login_check',    ),  ),  4 =>   array (  ),),
        'civix_representative_logout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/logout',    ),  ),  4 =>   array (  ),),
        'civix_front_representative' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\RepresentativeController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\RepresentativeController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_registration' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\RepresentativeController::registrationAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/registration',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\RepresentativeController::loginAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/login',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_edit_profile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\RepresentativeController::editProfileAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/edit-profile',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_update_profile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\RepresentativeController::updateProfileAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/update-profile',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_crop_avatar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\RepresentativeController::cropAvatarAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/crop-avatar',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_update_avatar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\RepresentativeController::updateAvatarAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/update-avatar',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_incoming_answers' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\RepresentativeController::incomingAnswersAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/incoming-answers',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_incoming_answers_details' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\RepresentativeController::incomingAnswersDetailsAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/incoming-answers',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_municipal' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\RepresentativeController::municipalAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/municipal',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_announcement_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\AnnouncementController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/announcements',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_announcement_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\AnnouncementController::newAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/announcements/new',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_announcement_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\AnnouncementController::editAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/announcements/edit',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_announcement_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\AnnouncementController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/announcements/delete',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_announcement_publish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\AnnouncementController::publishAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/announcements/publish',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_leaderevent_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\LeaderEventController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/leader-event',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_leaderevent_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\LeaderEventController::newAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/leader-event/new',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_leaderevent_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\LeaderEventController::editAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/leader-event/edit',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_leaderevent_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\LeaderEventController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/leader-event/delete',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_leaderevent_publish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\LeaderEventController::publishAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/leader-event/publish',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_news_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\NewsController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/news/',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_news_details' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\NewsController::detailsAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/news/details',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_news_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\NewsController::newAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/news/new',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_news_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\NewsController::editAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/news/edit',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_news_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\NewsController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/news/delete',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_news_publish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\NewsController::publishAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/news/publish',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_payment_buyemails' => array (  0 =>   array (    0 => 'petition',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PaymentController::buyEmailsAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'petition',    ),    1 =>     array (      0 => 'text',      1 => '/representative/petitions/buy-emails',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_payment_buypublicpetition' => array (  0 =>   array (    0 => 'petition',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PaymentController::buyPublicPetitionAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'petition',    ),    1 =>     array (      0 => 'text',      1 => '/representative/petitions/buy-outsiders',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_payment_success' => array (  0 =>   array (    0 => 'reference',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PaymentController::successAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'reference',    ),    1 =>     array (      0 => 'text',      1 => '/representative/petitions/transaction/success/emails',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_payment_emails' => array (  0 =>   array (    0 => 'reference',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PaymentController::emailsAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'reference',    ),    1 =>     array (      0 => 'text',      1 => '/representative/petitions/transaction/emails',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_paymentrequest_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PaymentRequestController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/payment-request',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_paymentrequest_followup' => array (  0 =>   array (    0 => 'petition',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PaymentRequestController::followUpAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'petition',    ),    1 =>     array (      0 => 'text',      1 => '/representative/payment-request/follow-up',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_paymentrequest_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PaymentRequestController::newAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/payment-request/new',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_paymentrequest_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PaymentRequestController::editAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/payment-request/edit',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_paymentrequest_publish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PaymentRequestController::publishAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/payment-request/publish',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_paymentrequest_publishfollowup' => array (  0 =>   array (    0 => 'id',    1 => 'petition',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PaymentRequestController::publishFollowUpAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'petition',    ),    1 =>     array (      0 => 'text',      1 => '/follow-up',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/representative/payment-request/publish',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_paymentrequest_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PaymentRequestController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/payment-request/delete',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_paymentrequest_funds' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PaymentRequestController::fundsAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET|POST',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/payment-request/funds',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_paymentsettings_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PaymentSettingsController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/payment-settings/',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_paymentsettings_accounttype' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PaymentSettingsController::accountTypeAction',  ),  2 =>   array (    'type' => 'personal|business',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => 'personal|business',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/representative/payment-settings/account',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_petition_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PetitionController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/petitions',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_petition_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PetitionController::newAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/petitions/new',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_petition_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PetitionController::editAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/petitions/edit',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_petition_publish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PetitionController::publishAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/petitions/publish',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_petition_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\PetitionController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/petitions/delete',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_question_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\QuestionController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/question',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_question_response' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\QuestionController::responseAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/question/sending-out-response',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_question_archive' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\QuestionController::archiveAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/question/archive',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_question_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\QuestionController::newAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/question/new',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_question_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\QuestionController::editAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/question/edit',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_question_publish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\QuestionController::publishAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/question/publish',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_question_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\QuestionController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/question/delete',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_question_details' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\QuestionController::detailsAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/question/details',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_report_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\ReportController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/reports',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_report_question' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\ReportController::questionAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/reports',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_report_events' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\ReportController::eventsAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/reports/events',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_report_event' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\ReportController::eventAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/reports/events',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_report_payments' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\ReportController::paymentsAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/reports/payment-requests',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_report_payment' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\ReportController::paymentAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/representative/reports/payment-requests',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_session_createleadersession' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\SessionController::createLeaderSession',  ),  2 =>   array (    '_method' => 'POST',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/create-session',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_subscription_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\SubscriptionController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/subscriptions',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_subscription_subscribe' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\SubscriptionController::subscribeAction',  ),  2 =>   array (    'id' => '20|30|40',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/subscribe',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '20|30|40',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/representative/subscriptions',    ),  ),  4 =>   array (  ),),
        'civix_front_representative_subscription_cancelsubscription' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Representative\\SubscriptionController::cancelSubscriptionAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/representative/subscriptions/cancel',    ),  ),  4 =>   array (  ),),
        'civix_front_group_login_check' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/login_check',    ),  ),  4 =>   array (  ),),
        'civix_group_logout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/logout',    ),  ),  4 =>   array (  ),),
        'civix_front_group_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\GroupController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/',    ),  ),  4 =>   array (  ),),
        'civix_front_group_registration' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\GroupController::registrationAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/registration',    ),  ),  4 =>   array (  ),),
        'civix_front_group_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\GroupController::loginAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/login',    ),  ),  4 =>   array (  ),),
        'civix_front_group_edit_profile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\GroupController::editProfileAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/edit-profile',    ),  ),  4 =>   array (  ),),
        'civix_front_group_update_profile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\GroupController::updateProfileAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/update-profile',    ),  ),  4 =>   array (  ),),
        'civix_front_group_crop_avatar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\GroupController::cropAvatarAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/crop-avatar',    ),  ),  4 =>   array (  ),),
        'civix_front_group_update_avatar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\GroupController::updateAvatarAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/update-avatar',    ),  ),  4 =>   array (  ),),
        'civix_front_group_invite' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\GroupController::inviteAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/invite',    ),  ),  4 =>   array (  ),),
        'civix_front_group_send_invite' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\GroupController::sendInviteAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/invite/send',    ),  ),  4 =>   array (  ),),
        'civix_front_group_announcement_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\AnnouncementController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/announcements',    ),  ),  4 =>   array (  ),),
        'civix_front_group_announcement_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\AnnouncementController::newAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/announcements/new',    ),  ),  4 =>   array (  ),),
        'civix_front_group_announcement_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\AnnouncementController::editAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/announcements/edit',    ),  ),  4 =>   array (  ),),
        'civix_front_group_announcement_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\AnnouncementController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/announcements/delete',    ),  ),  4 =>   array (  ),),
        'civix_front_group_announcement_publish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\AnnouncementController::publishAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/announcements/publish',    ),  ),  4 =>   array (  ),),
        'civix_front_group_fields' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\FieldsController::fieldsForm',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/fields',    ),  ),  4 =>   array (  ),),
        'civix_front_group_fields_update' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\FieldsController::updateFields',  ),  2 =>   array (    '_method' => 'POST',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/fields',    ),  ),  4 =>   array (  ),),
        'civix_front_group_leaderevent_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\LeaderEventController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/leader-event',    ),  ),  4 =>   array (  ),),
        'civix_front_group_leaderevent_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\LeaderEventController::newAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/leader-event/new',    ),  ),  4 =>   array (  ),),
        'civix_front_group_leaderevent_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\LeaderEventController::editAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/leader-event/edit',    ),  ),  4 =>   array (  ),),
        'civix_front_group_leaderevent_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\LeaderEventController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/leader-event/delete',    ),  ),  4 =>   array (  ),),
        'civix_front_group_leaderevent_publish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\LeaderEventController::publishAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/leader-event/publish',    ),  ),  4 =>   array (  ),),
        'civix_front_group_members' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\MemberController::membersAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/members',    ),  ),  4 =>   array (  ),),
        'civix_front_group_members_remove' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\MemberController::memberRemoveAction',  ),  2 =>   array (    '_method' => 'POST',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/group/members',    ),  ),  4 =>   array (  ),),
        'civix_front_group_manage_approvals' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\MemberController::manageApprovalsAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/members/approvals',    ),  ),  4 =>   array (  ),),
        'civix_front_group_members_approve' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\MemberController::approveUser',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'POST',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/approve',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/group/members',    ),  ),  4 =>   array (  ),),
        'civix_front_group_members_fields' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\MemberController::getUserFields',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fields',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/group/members',    ),  ),  4 =>   array (  ),),
        'civix_front_group_membership' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\MembershipController::membershipAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/membership/',    ),  ),  4 =>   array (  ),),
        'civix_front_group_membership_save' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\MembershipController::membershipSaveAction',  ),  2 =>   array (    '_method' => 'POST',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/membership/',    ),  ),  4 =>   array (  ),),
        'civix_front_petitions' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\MicropetitionController::petitionAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/micro-petitions',    ),  ),  4 =>   array (  ),),
        'civix_front_petitions_open' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\MicropetitionController::openPetitionAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/micro-petitions/open',    ),  ),  4 =>   array (  ),),
        'civix_front_petitions_boost' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\MicropetitionController::petitionBoostAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/micro-petitions/boost',    ),  ),  4 =>   array (  ),),
        'civix_front_petitions_details' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\MicropetitionController::petitionDetailsAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/micro-petitions/details',    ),  ),  4 =>   array (  ),),
        'civix_front_petitions_config' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\MicropetitionController::petitionConfigAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/micro-petitions/config',    ),  ),  4 =>   array (  ),),
        'civix_front_petitions_config_save' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\MicropetitionController::petitionConfigSaveAction',  ),  2 =>   array (    '_method' => 'POST',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/micro-petitions/config',    ),  ),  4 =>   array (  ),),
        'civix_front_group_news_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\NewsController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/news/',    ),  ),  4 =>   array (  ),),
        'civix_front_group_news_details' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\NewsController::detailsAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/news/details',    ),  ),  4 =>   array (  ),),
        'civix_front_group_news_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\NewsController::newAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/news/new',    ),  ),  4 =>   array (  ),),
        'civix_front_group_news_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\NewsController::editAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/news/edit',    ),  ),  4 =>   array (  ),),
        'civix_front_group_news_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\NewsController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/news/delete',    ),  ),  4 =>   array (  ),),
        'civix_front_group_news_publish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\NewsController::publishAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/news/publish',    ),  ),  4 =>   array (  ),),
        'civix_front_group_payment_buyemails' => array (  0 =>   array (    0 => 'petition',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PaymentController::buyEmailsAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'petition',    ),    1 =>     array (      0 => 'text',      1 => '/group/petitions/buy-emails',    ),  ),  4 =>   array (  ),),
        'civix_front_group_payment_buypublicpetition' => array (  0 =>   array (    0 => 'petition',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PaymentController::buyPublicPetitionAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'petition',    ),    1 =>     array (      0 => 'text',      1 => '/group/petitions/buy-outsiders',    ),  ),  4 =>   array (  ),),
        'civix_front_group_payment_success' => array (  0 =>   array (    0 => 'reference',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PaymentController::successAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'reference',    ),    1 =>     array (      0 => 'text',      1 => '/group/petitions/transaction/success/emails',    ),  ),  4 =>   array (  ),),
        'civix_front_group_payment_emails' => array (  0 =>   array (    0 => 'reference',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PaymentController::emailsAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'reference',    ),    1 =>     array (      0 => 'text',      1 => '/group/petitions/transaction/emails',    ),  ),  4 =>   array (  ),),
        'civix_front_group_paymentrequest_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PaymentRequestController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/payment-request',    ),  ),  4 =>   array (  ),),
        'civix_front_group_paymentrequest_followup' => array (  0 =>   array (    0 => 'petition',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PaymentRequestController::followUpAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'petition',    ),    1 =>     array (      0 => 'text',      1 => '/group/payment-request/follow-up',    ),  ),  4 =>   array (  ),),
        'civix_front_group_paymentrequest_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PaymentRequestController::newAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/payment-request/new',    ),  ),  4 =>   array (  ),),
        'civix_front_group_paymentrequest_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PaymentRequestController::editAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/payment-request/edit',    ),  ),  4 =>   array (  ),),
        'civix_front_group_paymentrequest_publish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PaymentRequestController::publishAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/payment-request/publish',    ),  ),  4 =>   array (  ),),
        'civix_front_group_paymentrequest_publishfollowup' => array (  0 =>   array (    0 => 'id',    1 => 'petition',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PaymentRequestController::publishFollowUpAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'petition',    ),    1 =>     array (      0 => 'text',      1 => '/follow-up',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/group/payment-request/publish',    ),  ),  4 =>   array (  ),),
        'civix_front_group_paymentrequest_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PaymentRequestController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/payment-request/delete',    ),  ),  4 =>   array (  ),),
        'civix_front_group_paymentrequest_funds' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PaymentRequestController::fundsAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET|POST',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/payment-request/funds',    ),  ),  4 =>   array (  ),),
        'civix_front_group_paymentsettings_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PaymentSettingsController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/payment-settings/',    ),  ),  4 =>   array (  ),),
        'civix_front_group_paymentsettings_accounttype' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PaymentSettingsController::accountTypeAction',  ),  2 =>   array (    'type' => 'personal|business',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => 'personal|business',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/group/payment-settings/account',    ),  ),  4 =>   array (  ),),
        'civix_front_group_permissionsettings_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PermissionSettingsController::indexAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/permission-settings/',    ),  ),  4 =>   array (  ),),
        'civix_front_group_petition_invite' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PetitionController::inviteAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/petitions/invite',    ),  ),  4 =>   array (  ),),
        'civix_front_group_petition_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PetitionController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/petitions',    ),  ),  4 =>   array (  ),),
        'civix_front_group_petition_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PetitionController::newAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/petitions/new',    ),  ),  4 =>   array (  ),),
        'civix_front_group_petition_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PetitionController::editAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/petitions/edit',    ),  ),  4 =>   array (  ),),
        'civix_front_group_petition_publish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PetitionController::publishAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/petitions/publish',    ),  ),  4 =>   array (  ),),
        'civix_front_group_petition_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\PetitionController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/petitions/delete',    ),  ),  4 =>   array (  ),),
        'civix_front_group_question_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\QuestionController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/question',    ),  ),  4 =>   array (  ),),
        'civix_front_group_question_response' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\QuestionController::responseAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/question/sending-out-response',    ),  ),  4 =>   array (  ),),
        'civix_front_group_question_archive' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\QuestionController::archiveAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/question/archive',    ),  ),  4 =>   array (  ),),
        'civix_front_group_question_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\QuestionController::newAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/question/new',    ),  ),  4 =>   array (  ),),
        'civix_front_group_question_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\QuestionController::editAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/question/edit',    ),  ),  4 =>   array (  ),),
        'civix_front_group_question_publish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\QuestionController::publishAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/question/publish',    ),  ),  4 =>   array (  ),),
        'civix_front_group_question_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\QuestionController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/question/delete',    ),  ),  4 =>   array (  ),),
        'civix_front_group_question_details' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\QuestionController::detailsAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/question/details',    ),  ),  4 =>   array (  ),),
        'civix_front_group_report_membership' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\ReportController::membershipAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/reports/membership',    ),  ),  4 =>   array (  ),),
        'civix_front_group_report_downloadmembership' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\ReportController::downloadMembershipAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/reports/membership/download',    ),  ),  4 =>   array (  ),),
        'civix_front_group_report_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\ReportController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/reports',    ),  ),  4 =>   array (  ),),
        'civix_front_group_report_question' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\ReportController::questionAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/reports',    ),  ),  4 =>   array (  ),),
        'civix_front_group_report_events' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\ReportController::eventsAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/reports/events',    ),  ),  4 =>   array (  ),),
        'civix_front_group_report_event' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\ReportController::eventAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/reports/events',    ),  ),  4 =>   array (  ),),
        'civix_front_group_report_payments' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\ReportController::paymentsAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/reports/payment-requests',    ),  ),  4 =>   array (  ),),
        'civix_front_group_report_payment' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\ReportController::paymentAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/reports/payment-requests',    ),  ),  4 =>   array (  ),),
        'civix_front_group_sections_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\SectionsController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/sections/',    ),  ),  4 =>   array (  ),),
        'civix_front_group_sections_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\SectionsController::newAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/sections/new',    ),  ),  4 =>   array (  ),),
        'civix_front_group_sections_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\SectionsController::editAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/sections/edit',    ),  ),  4 =>   array (  ),),
        'civix_front_group_sections_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\SectionsController::viewAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/sections/view',    ),  ),  4 =>   array (  ),),
        'civix_front_group_sections_assign' => array (  0 =>   array (    0 => 'id',    1 => 'user_id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\SectionsController::assignAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user_id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/group/sections/assign',    ),  ),  4 =>   array (  ),),
        'civix_front_group_sections_remove_user' => array (  0 =>   array (    0 => 'id',    1 => 'user_id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\SectionsController::removeUserAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user_id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/group/sections/remove-user',    ),  ),  4 =>   array (  ),),
        'civix_front_group_sections_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\SectionsController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/group/sections/delete',    ),  ),  4 =>   array (  ),),
        'civix_front_group_session_createleadersession' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\SessionController::createLeaderSession',  ),  2 =>   array (    '_method' => 'POST',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/create-session',    ),  ),  4 =>   array (  ),),
        'civix_front_group_subscription_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\SubscriptionController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/subscriptions',    ),  ),  4 =>   array (  ),),
        'civix_front_group_subscription_subscribe' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\SubscriptionController::subscribeAction',  ),  2 =>   array (    'id' => '20|30|40',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/subscribe',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '20|30|40',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/group/subscriptions',    ),  ),  4 =>   array (  ),),
        'civix_front_group_subscription_cancelsubscription' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Group\\SubscriptionController::cancelSubscriptionAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/group/subscriptions/cancel',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_login_check' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/login_check',    ),  ),  4 =>   array (  ),),
        'civix_superuser_logout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/logout',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_discount_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\DiscountController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/discounts',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_discount_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\DiscountController::newAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/discounts/new',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_discount_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\DiscountController::editAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/discounts/edit',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_discount_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\DiscountController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/discounts/delete',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_group_limits' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\GroupController::limitsGroupAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/group/limits',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_group_limits_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\GroupController::limitsGroupEditAction',  ),  2 =>   array (    '_method' => 'POST',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/save',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/superuser/group/limits',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_group_remove' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\GroupController::removeGroupAction',  ),  2 =>   array (    '_method' => 'POST',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/group/remove',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_group_switch' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\GroupController::switchToStateGroup',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/group/switch',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_state_groups' => array (  0 =>   array (  ),  1 =>   array (    'countryGroup' => NULL,    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\GroupController::stateGroupAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/group/state',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_country_groups_children' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    'countryGroup' => NULL,    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\GroupController::stateGroupAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/group/state',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_local_groups_assign' => array (  0 =>   array (    0 => 'group',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\GroupController::assignLocalGroup',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/group/local/assign',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_local_groups_assign_save' => array (  0 =>   array (    0 => 'group',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\GroupController::saveAssignLocalGroup',  ),  2 =>   array (    '_method' => 'POST',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/group/local/assign',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_local_groups_by_parent' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\GroupController::localGroupActionByState',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/group/local',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_local_groups' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\GroupController::localGroupAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/group/local',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_post_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\PostController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/post',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_post_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\PostController::newAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/post/new',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_post_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\PostController::editAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/post',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_post_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\PostController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/post/delete',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_post_publish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\PostController::publishAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/post/publish',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_question_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\QuestionController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/question',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_question_response' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\QuestionController::responseAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/question/sending-out-response',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_question_archive' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\QuestionController::archiveAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/question/archive',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_question_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\QuestionController::newAction',  ),  2 =>   array (    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/question/new',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_question_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\QuestionController::editAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/question/edit',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_question_publish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\QuestionController::publishAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/question/publish',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_question_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\QuestionController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/question/delete',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_question_details' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\QuestionController::detailsAction',  ),  2 =>   array (    'id' => '\\d+',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/question/details',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_report_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\ReportController::indexAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/reports',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_report_question' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\ReportController::questionAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/reports',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_report_events' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\ReportController::eventsAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/reports/events',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_report_event' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\ReportController::eventAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/reports/events',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_report_payments' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\ReportController::paymentsAction',  ),  2 =>   array (    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/reports/payment-requests',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_report_payment' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\ReportController::paymentAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/reports/payment-requests',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_settings_states' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\SettingsController::statesListAction',  ),  2 =>   array (    '_method' => 'GET|POST',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/settings/states',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_settings_states_update' => array (  0 =>   array (    0 => 'state',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\Superuser\\SettingsController::statesUpdateAction',  ),  2 =>   array (    '_method' => 'POST',    '_scheme' => 'https',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'state',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/settings/states',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\SuperuserController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_approvals' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\SuperuserController::approvalsAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/approvals',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_representative_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\SuperuserController::editRepresentativeAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/representative/edit',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_representative_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\SuperuserController::deleteRepresentativeAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/representative/delete',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_representative_approve' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\SuperuserController::approveRepresentativeAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/representative/approve',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\SuperuserController::loginAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/login',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_manage_representatives' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\SuperuserController::manageRepresentativesAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/manage/representatives',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_manage_groups' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\SuperuserController::manageGroupsAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/manage/groups',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_manage_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\SuperuserController::manageUsersAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/manage/users',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_reset_user_password' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\SuperuserController::resetUserPasswordAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reset-password',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/superuser/manage/users',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_manage_limits' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\SuperuserController::manageLimitsAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/superuser/manage/limits',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_representative_remove' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\SuperuserController::removeRepresentativeAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/representative/remove',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_limit_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\SuperuserController::defaultLimitEditAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/limits/edit',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_limit_save' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\SuperuserController::defaultLimitSaveAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/limits/save',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_representative_limits' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\SuperuserController::limitsRepresentativeAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/representative/limits',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_representative_limits_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\SuperuserController::limitsRepresentativeEditAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/save',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/superuser/representative/limits',    ),  ),  4 =>   array (  ),),
        'civix_front_superuser_user_remove' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\SuperuserController::removeUserAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/superuser/user/remove',    ),  ),  4 =>   array (  ),),
        'civix_account_switch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\AccountController::switchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/account/switch',    ),  ),  4 =>   array (  ),),
        'civix_account_exit_switch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Civix\\FrontBundle\\Controller\\AccountController::exitSwitchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/account/exit-switch',    ),  ),  4 =>   array (  ),),
        'nelmio_api_doc_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Nelmio\\ApiDocBundle\\Controller\\ApiDocController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api-doc/',    ),  ),  4 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens);
    }
}
