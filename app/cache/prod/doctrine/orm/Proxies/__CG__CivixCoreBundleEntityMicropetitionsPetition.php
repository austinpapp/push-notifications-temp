<?php

namespace Proxies\__CG__\Civix\CoreBundle\Entity\Micropetitions;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Petition extends \Civix\CoreBundle\Entity\Micropetitions\Petition implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setTitle($title)
    {
        $this->__load();
        return parent::setTitle($title);
    }

    public function getTitle()
    {
        $this->__load();
        return parent::getTitle();
    }

    public function setPetitionBody($petitionBody)
    {
        $this->__load();
        return parent::setPetitionBody($petitionBody);
    }

    public function getPetitionBody()
    {
        $this->__load();
        return parent::getPetitionBody();
    }

    public function setLink($link)
    {
        $this->__load();
        return parent::setLink($link);
    }

    public function getLink()
    {
        $this->__load();
        return parent::getLink();
    }

    public function setIsOutsidersSign($isOutsidersSign)
    {
        $this->__load();
        return parent::setIsOutsidersSign($isOutsidersSign);
    }

    public function getIsOutsidersSign()
    {
        $this->__load();
        return parent::getIsOutsidersSign();
    }

    public function setCreatedAt($createdAt)
    {
        $this->__load();
        return parent::setCreatedAt($createdAt);
    }

    public function getCreatedAt()
    {
        $this->__load();
        return parent::getCreatedAt();
    }

    public function setExpireAt($expireAt)
    {
        $this->__load();
        return parent::setExpireAt($expireAt);
    }

    public function getExpireAt()
    {
        $this->__load();
        return parent::getExpireAt();
    }

    public function setGroup(\Civix\CoreBundle\Entity\Group $group = NULL)
    {
        $this->__load();
        return parent::setGroup($group);
    }

    public function getGroup()
    {
        $this->__load();
        return parent::getGroup();
    }

    public function setUser(\Civix\CoreBundle\Entity\User $user = NULL)
    {
        $this->__load();
        return parent::setUser($user);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }

    public function setPublishStatus($status)
    {
        $this->__load();
        return parent::setPublishStatus($status);
    }

    public function getPublishStatus()
    {
        $this->__load();
        return parent::getPublishStatus();
    }

    public function getUserExpireInterval()
    {
        $this->__load();
        return parent::getUserExpireInterval();
    }

    public function setUserExpireInterval($interval)
    {
        $this->__load();
        return parent::setUserExpireInterval($interval);
    }

    public function getGroupId()
    {
        $this->__load();
        return parent::getGroupId();
    }

    public function setGroupId($groupId)
    {
        $this->__load();
        return parent::setGroupId($groupId);
    }

    public function getOptions()
    {
        $this->__load();
        return parent::getOptions();
    }

    public function setType($type)
    {
        $this->__load();
        return parent::setType($type);
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function setCreationData()
    {
        $this->__load();
        return parent::setCreationData();
    }

    public function getAnswers()
    {
        $this->__load();
        return parent::getAnswers();
    }

    public function getOptionsIds()
    {
        $this->__load();
        return parent::getOptionsIds();
    }

    public function setCountVoices($calcArray)
    {
        $this->__load();
        return parent::setCountVoices($calcArray);
    }

    public function getAnswerId()
    {
        $this->__load();
        return parent::getAnswerId();
    }

    public function getResponsesCount()
    {
        $this->__load();
        return parent::getResponsesCount();
    }

    public function getMaxAnswers()
    {
        $this->__load();
        return parent::getMaxAnswers();
    }

    public function getQuorumCount()
    {
        $this->__load();
        return parent::getQuorumCount();
    }

    public function getTypes()
    {
        $this->__load();
        return parent::getTypes();
    }

    public function addAnswer(\Civix\CoreBundle\Entity\Micropetitions\Answer $answers)
    {
        $this->__load();
        return parent::addAnswer($answers);
    }

    public function removeAnswer(\Civix\CoreBundle\Entity\Micropetitions\Answer $answers)
    {
        $this->__load();
        return parent::removeAnswer($answers);
    }

    public function addHashTag(\Civix\CoreBundle\Entity\HashTag $hashTags)
    {
        $this->__load();
        return parent::addHashTag($hashTags);
    }

    public function removeHashTag(\Civix\CoreBundle\Entity\HashTag $hashTags)
    {
        $this->__load();
        return parent::removeHashTag($hashTags);
    }

    public function getHashTags()
    {
        $this->__load();
        return parent::getHashTags();
    }

    public function setCachedHashTags($cachedHashTags)
    {
        $this->__load();
        return parent::setCachedHashTags($cachedHashTags);
    }

    public function getCachedHashTags()
    {
        $this->__load();
        return parent::getCachedHashTags();
    }

    public function getSharePicture()
    {
        $this->__load();
        return parent::getSharePicture();
    }

    public function getComments()
    {
        $this->__load();
        return parent::getComments();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'title', 'petitionBody', 'groupId', 'link', 'isOutsidersSign', 'createdAt', 'expireAt', 'userExpireInterval', 'publishStatus', 'type', 'cachedHashTags', 'group', 'user', 'answers', 'comments', 'hashTags');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}