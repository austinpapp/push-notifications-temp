<?php

namespace Proxies\__CG__\Civix\CoreBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class RepresentativeStorage extends \Civix\CoreBundle\Entity\RepresentativeStorage implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function getAddress()
    {
        $this->__load();
        return parent::getAddress();
    }

    public function setFirstName($firstName)
    {
        $this->__load();
        return parent::setFirstName($firstName);
    }

    public function getFirstName()
    {
        $this->__load();
        return parent::getFirstName();
    }

    public function setLastName($lastName)
    {
        $this->__load();
        return parent::setLastName($lastName);
    }

    public function getLastName()
    {
        $this->__load();
        return parent::getLastName();
    }

    public function setOfficialTitle($officialTitle)
    {
        $this->__load();
        return parent::setOfficialTitle($officialTitle);
    }

    public function getOfficialTitle()
    {
        $this->__load();
        return parent::getOfficialTitle();
    }

    public function getPhone()
    {
        $this->__load();
        return parent::getPhone();
    }

    public function setPhone($phone)
    {
        $this->__load();
        return parent::setPhone($phone);
    }

    public function getFax()
    {
        $this->__load();
        return parent::getFax();
    }

    public function setFax($fax)
    {
        $this->__load();
        return parent::setFax($fax);
    }

    public function getContactEmail()
    {
        $this->__load();
        return parent::getContactEmail();
    }

    public function setContactEmail($email)
    {
        $this->__load();
        return parent::setContactEmail($email);
    }

    public function getWebsite()
    {
        $this->__load();
        return parent::getWebsite();
    }

    public function setWebsite($url)
    {
        $this->__load();
        return parent::setWebsite($url);
    }

    public function getCountry()
    {
        $this->__load();
        return parent::getCountry();
    }

    public function setCountry($country)
    {
        $this->__load();
        return parent::setCountry($country);
    }

    public function getState()
    {
        $this->__load();
        return parent::getState();
    }

    public function getCity()
    {
        $this->__load();
        return parent::getCity();
    }

    public function setState(\Civix\CoreBundle\Entity\State $state = NULL)
    {
        $this->__load();
        return parent::setState($state);
    }

    public function setRepresentative(\Civix\CoreBundle\Entity\Representative $representative = NULL)
    {
        $this->__load();
        return parent::setRepresentative($representative);
    }

    public function setCity($city)
    {
        $this->__load();
        return parent::setCity($city);
    }

    public function getAddressLine1()
    {
        $this->__load();
        return parent::getAddressLine1();
    }

    public function setAddressLine1($address1)
    {
        $this->__load();
        return parent::setAddressLine1($address1);
    }

    public function getAddressLine2()
    {
        $this->__load();
        return parent::getAddressLine2();
    }

    public function setAddressLine2($address2)
    {
        $this->__load();
        return parent::setAddressLine2($address2);
    }

    public function getAddressLine3()
    {
        $this->__load();
        return parent::getAddressLine3();
    }

    public function setAddressLine3($address3)
    {
        $this->__load();
        return parent::setAddressLine3($address3);
    }

    public function setStorageId($storageId)
    {
        $this->__load();
        return parent::setStorageId($storageId);
    }

    public function getStorageId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["storageId"];
        }
        $this->__load();
        return parent::getStorageId();
    }

    public function getDistrictId()
    {
        $this->__load();
        return parent::getDistrictId();
    }

    public function getDistrictTypeName()
    {
        $this->__load();
        return parent::getDistrictTypeName();
    }

    public function getRepresentative()
    {
        $this->__load();
        return parent::getRepresentative();
    }

    public function setAvatarSrc($avatarSrc)
    {
        $this->__load();
        return parent::setAvatarSrc($avatarSrc);
    }

    public function getAvatarSrc()
    {
        $this->__load();
        return parent::getAvatarSrc();
    }

    public function setAvatar($avatar)
    {
        $this->__load();
        return parent::setAvatar($avatar);
    }

    public function getAvatar()
    {
        $this->__load();
        return parent::getAvatar();
    }

    public function getDefaultAvatar()
    {
        $this->__load();
        return parent::getDefaultAvatar();
    }

    public function setAvatarFileName($avatarFileName)
    {
        $this->__load();
        return parent::setAvatarFileName($avatarFileName);
    }

    public function getAvatarFileName()
    {
        $this->__load();
        return parent::getAvatarFileName();
    }

    public function getAvatarPath()
    {
        $this->__load();
        return parent::getAvatarPath();
    }

    public function isLocalLeader()
    {
        $this->__load();
        return parent::isLocalLeader();
    }

    public function setDistrict(\Civix\CoreBundle\Entity\District $district = NULL)
    {
        $this->__load();
        return parent::setDistrict($district);
    }

    public function getDistrict()
    {
        $this->__load();
        return parent::getDistrict();
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function setParty($party)
    {
        $this->__load();
        return parent::setParty($party);
    }

    public function getParty()
    {
        $this->__load();
        return parent::getParty();
    }

    public function setBirthday($birthday)
    {
        $this->__load();
        return parent::setBirthday($birthday);
    }

    public function getBirthday()
    {
        $this->__load();
        return parent::getBirthday();
    }

    public function setStartTerm($startTerm)
    {
        $this->__load();
        return parent::setStartTerm($startTerm);
    }

    public function getStartTerm()
    {
        $this->__load();
        return parent::getStartTerm();
    }

    public function setEndTerm($endTerm)
    {
        $this->__load();
        return parent::setEndTerm($endTerm);
    }

    public function getEndTerm()
    {
        $this->__load();
        return parent::getEndTerm();
    }

    public function setFacebook($facebook)
    {
        $this->__load();
        return parent::setFacebook($facebook);
    }

    public function getFacebook()
    {
        $this->__load();
        return parent::getFacebook();
    }

    public function setYoutube($youtube)
    {
        $this->__load();
        return parent::setYoutube($youtube);
    }

    public function getYoutube()
    {
        $this->__load();
        return parent::getYoutube();
    }

    public function setTwitter($twitter)
    {
        $this->__load();
        return parent::setTwitter($twitter);
    }

    public function getTwitter()
    {
        $this->__load();
        return parent::getTwitter();
    }

    public function setOpenstateId($openstateId)
    {
        $this->__load();
        return parent::setOpenstateId($openstateId);
    }

    public function getOpenstateId()
    {
        $this->__load();
        return parent::getOpenstateId();
    }

    public function setUpdatedAt($updatedAt)
    {
        $this->__load();
        return parent::setUpdatedAt($updatedAt);
    }

    public function getUpdatedAt()
    {
        $this->__load();
        return parent::getUpdatedAt();
    }

    public function setCurrentTimeAsUpdatedAt()
    {
        $this->__load();
        return parent::setCurrentTimeAsUpdatedAt();
    }

    public function getStateCode()
    {
        $this->__load();
        return parent::getStateCode();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'storageId', 'firstName', 'lastName', 'officialTitle', 'phone', 'fax', 'contactEmail', 'website', 'country', 'city', 'addressLine1', 'addressLine2', 'addressLine3', 'avatarSrc', 'avatarFileName', 'party', 'birthday', 'startTerm', 'endTerm', 'facebook', 'youtube', 'twitter', 'openstateId', 'updatedAt', 'state', 'representative', 'district');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}